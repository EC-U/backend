swagger: "2.0"
info:
  title: beego Test API
  description: beego has a very cool tools to autogenerate documents for your API
  version: 1.0.0
  termsOfService: http://beego.me/
  contact:
    email: astaxie@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
basePath: /v1
paths:
  /activity/:
    get:
      tags:
      - activity
      description: get Activity
      operationId: ActivityController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Activity'
        "403":
          description: ""
    post:
      tags:
      - activity
      description: create Activity
      operationId: ActivityController.Post
      parameters:
      - in: body
        name: body
        description: body for Activity content
        required: true
        schema:
          $ref: '#/definitions/models.Activity'
      responses:
        "201":
          description: '{int} models.Activity'
        "403":
          description: body is empty
  /activity/{id}:
    get:
      tags:
      - activity
      description: get Activity by id
      operationId: ActivityController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Activity'
        "403":
          description: :id is empty
    put:
      tags:
      - activity
      description: update the Activity
      operationId: ActivityController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Activity content
        required: true
        schema:
          $ref: '#/definitions/models.Activity'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Activity'
        "403":
          description: :id is not int
    delete:
      tags:
      - activity
      description: delete the Activity
      operationId: ActivityController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /article/:
    get:
      tags:
      - article
      description: get Article
      operationId: ArticleController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Article'
        "403":
          description: ""
    post:
      tags:
      - article
      description: create Article
      operationId: ArticleController.Post
      parameters:
      - in: body
        name: body
        description: body for Article content
        required: true
        schema:
          $ref: '#/definitions/models.Article'
      responses:
        "201":
          description: '{int} models.Article'
        "403":
          description: body is empty
  /article/{id}:
    get:
      tags:
      - article
      description: get Article by id
      operationId: ArticleController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Article'
        "403":
          description: :id is empty
    put:
      tags:
      - article
      description: update the Article
      operationId: ArticleController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Article content
        required: true
        schema:
          $ref: '#/definitions/models.Article'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Article'
        "403":
          description: :id is not int
    delete:
      tags:
      - article
      description: delete the Article
      operationId: ArticleController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /category/:
    get:
      tags:
      - category
      description: get Category
      operationId: CategoryController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Category'
        "403":
          description: ""
    post:
      tags:
      - category
      description: create Category
      operationId: CategoryController.Post
      parameters:
      - in: body
        name: body
        description: body for Category content
        required: true
        schema:
          $ref: '#/definitions/models.Category'
      responses:
        "201":
          description: '{int} models.Category'
        "403":
          description: body is empty
  /category/{id}:
    get:
      tags:
      - category
      description: get Category by id
      operationId: CategoryController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Category'
        "403":
          description: :id is empty
    put:
      tags:
      - category
      description: update the Category
      operationId: CategoryController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Category content
        required: true
        schema:
          $ref: '#/definitions/models.Category'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Category'
        "403":
          description: :id is not int
    delete:
      tags:
      - category
      description: delete the Category
      operationId: CategoryController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /migrations/:
    get:
      tags:
      - migrations
      description: get Migrations
      operationId: MigrationsController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Migrations'
        "403":
          description: ""
    post:
      tags:
      - migrations
      description: create Migrations
      operationId: MigrationsController.Post
      parameters:
      - in: body
        name: body
        description: body for Migrations content
        required: true
        schema:
          $ref: '#/definitions/models.Migrations'
      responses:
        "201":
          description: '{int} models.Migrations'
        "403":
          description: body is empty
  /migrations/{id}:
    get:
      tags:
      - migrations
      description: get Migrations by id
      operationId: MigrationsController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Migrations'
        "403":
          description: :id is empty
    put:
      tags:
      - migrations
      description: update the Migrations
      operationId: MigrationsController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Migrations content
        required: true
        schema:
          $ref: '#/definitions/models.Migrations'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Migrations'
        "403":
          description: :id is not int
    delete:
      tags:
      - migrations
      description: delete the Migrations
      operationId: MigrationsController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /user/:
    get:
      tags:
      - user
      description: get User
      operationId: UserController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.User'
        "403":
          description: ""
    post:
      tags:
      - user
      description: create User
      operationId: UserController.Post
      parameters:
      - in: body
        name: body
        description: body for User content
        required: true
        schema:
          $ref: '#/definitions/models.User'
      responses:
        "201":
          description: '{int} models.User'
        "403":
          description: body is empty
  /user/{id}:
    get:
      tags:
      - user
      description: get User by id
      operationId: UserController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.User'
        "403":
          description: :id is empty
    put:
      tags:
      - user
      description: update the User
      operationId: UserController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for User content
        required: true
        schema:
          $ref: '#/definitions/models.User'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.User'
        "403":
          description: :id is not int
    delete:
      tags:
      - user
      description: delete the User
      operationId: UserController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /userprofile/:
    get:
      tags:
      - userprofile
      description: get Userprofile
      operationId: UserprofileController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Userprofile'
        "403":
          description: ""
    post:
      tags:
      - userprofile
      description: create Userprofile
      operationId: UserprofileController.Post
      parameters:
      - in: body
        name: body
        description: body for Userprofile content
        required: true
        schema:
          $ref: '#/definitions/models.Userprofile'
      responses:
        "201":
          description: '{int} models.Userprofile'
        "403":
          description: body is empty
  /userprofile/{id}:
    get:
      tags:
      - userprofile
      description: get Userprofile by id
      operationId: UserprofileController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Userprofile'
        "403":
          description: :id is empty
    put:
      tags:
      - userprofile
      description: update the Userprofile
      operationId: UserprofileController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Userprofile content
        required: true
        schema:
          $ref: '#/definitions/models.Userprofile'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Userprofile'
        "403":
          description: :id is not int
    delete:
      tags:
      - userprofile
      description: delete the Userprofile
      operationId: UserprofileController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
definitions:
  models.Activity:
    title: Activity
    type: object
  models.Article:
    title: Article
    type: object
  models.Category:
    title: Category
    type: object
  models.Migrations:
    title: Migrations
    type: object
  models.User:
    title: User
    type: object
  models.Userprofile:
    title: Userprofile
    type: object
tags:
- name: activity
  description: |
    ActivityController operations for Activity
- name: article
  description: |
    ArticleController operations for Article
- name: category
  description: |
    CategoryController operations for Category
- name: migrations
  description: |
    MigrationsController operations for Migrations
- name: user
  description: |
    UserController operations for User
- name: userprofile
  description: |
    UserprofileController operations for Userprofile
